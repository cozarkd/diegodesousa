---
import GitHub from '@/components/icons/GitHub.astro'
import NextJS from '@/components/icons/NextJS.astro'
import Tailwind from '@/components/icons/Tailwind.astro'
import Eleventy from '@/components/icons/Eleventy.astro'
import Tauri from '@/components/icons/Tauri.astro'
import Link from '@/components/icons/Link.astro'
import LinkButton from '@/components/LinkButton.astro'

import { Image } from 'astro:assets' // Importa el componente Image de Astro para manejar imágenes.
import { getCollection } from 'astro:content' // Importa getCollection para obtener datos de contenido.
import { getI18N } from '@/i18n' // Importa la función getI18N para manejo de internacionalización (i18n).

const { currentLocale } = Astro // Obtiene el idioma actual.
const i18n = getI18N({ currentLocale }) // Obtiene las traducciones correspondientes al idioma actual.

const projects = await getCollection('projects') // Obtiene la colección de proyectos.

// console.log('Projects:', projects) // Depuración: muestra la lista completa de proyectos.

const filteredProjects = projects
  .filter((project) => {
    // Filtra los proyectos según el idioma actual.
    return project.data.language === currentLocale
  })
  .map((project) => {
    // Mapea los datos del proyecto para obtener la estructura deseada.
    const projectData = {
      ...project.data,
      cover: project.data.cover, // Imagen de portada del proyecto.
      tags: project.data.tags // Etiquetas del proyecto.
    }
    return projectData
  })
---

<h2 class='text-3xl font-bold text-primary'>{i18n.PROJECTSSECTION.H2}</h2>
<div class='flex flex-col gap-y-16'>
  {
    filteredProjects
      .filter((project) => {
        return !project.isDraft
      })
      .map((project) => (
        <article class='group flex flex-col space-x-0 space-y-8 md:flex-row md:space-x-8 md:space-y-0'>
          <div class='w-full md:w-1/2'>
            <div class='overflow-hidden rounded-lg shadow-lg'>
              {project.video ? (
                // eslint-disable-next-line astro/jsx-a11y/media-has-caption

                // Implement lazy loading for videos
                <video
                  class='lozad'
                  loop
                  autoplay
                  muted
                  data-poster={project.cover?.src}
                >
                  <source data-src={project.video} type='video/webm' />
                  Your browser does not support the video tag.
                </video>
				<noscript>
					<video
					loop
					autoplay
                  muted
                  poster={project.cover?.src}
                >
                  <source src={project.video} type='video/webm' />
                  Your browser does not support the video tag.
                </video>
              </noscript>
              ) : (
                // Si el proyecto tiene una imagen de portada, la muestra.
                project.cover && (
                  <Image
                    src={project.cover}
                    alt={project.title}
                    widths={[408, 816, 1160]}
                    sizes='(min-width: 1040px) 408px, (min-width: 780px) 296px, calc(100vw - 48px)'
                    class='w-full object-contain object-top transition duration-500'
                    loading='lazy'
                  />
                )
              )}
            </div>
          </div>
          <div class='w-full md:w-1/2 md:max-w-lg'>
            <h3 class='mb-4 text-balance text-2xl font-bold text-secondary dark:text-secondary'>
              {project.title}
            </h3>
            <div class='mt-2 flex flex-wrap'>
              <ul class='mb-2 flex flex-row gap-x-2'>
                {project.tags.map((tag) => (
                  <li>
                    <span
                      class={`flex gap-x-2 rounded-full text-xs ${tag.class} px-2 py-1`}
                    >
                      {tag.name}
                    </span>
                  </li>
                ))}
              </ul>
              <div
                class='mt-2 text-gray-700 dark:text-gray-100'
                set:html={project.description}
              />
              <footer class='mt-4 flex items-end justify-start gap-x-4'>
                {project.github && (
                  <LinkButton asChild>
                    <a href={project.github}>
                      <GitHub class='size-6' />
                      {i18n.PROJECTSSECTION.SOURCECODE}
                    </a>
                  </LinkButton>
                )}
                {project.link && (
                  <LinkButton href={project.link} asChild>
                    <Link class='size-4' />
                    {i18n.PROJECTSSECTION.LIVEDEMO}
                  </LinkButton>
                )}
              </footer>
            </div>
          </div>
        </article>
      ))
  }
</div>

<script>
  import lozad from 'lozad'

  const observer = lozad() // lazy loads elements with default selector as '.lozad'
  observer.observe()
</script>
