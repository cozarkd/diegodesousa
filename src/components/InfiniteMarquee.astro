---
interface Logo {
  component: any
  alt: string
  size: { width: number; height: number }
}

interface Props {
  logos: Logo[]
}

const { logos } = Astro.props
---

<div class='marquee'>
  <div class='marquee-content'>
    {
      logos.map((logo) => (
        <div
          class='marquee-item'
          style={`width: ${logo.size.width}px; height: ${logo.size.height}px;`}
        >
          <logo.component aria-label={logo.alt} width='100%' height='100%' />
        </div>
      ))
    }
  </div>
  <div class='marquee-content'>
    {
      logos.map((logo) => (
        <div
          class='marquee-item'
          style={`width: ${logo.size.width}px; height: ${logo.size.height}px;`}
        >
          <logo.component aria-label={logo.alt} width='100%' height='100%' />
        </div>
      ))
    }
  </div>
</div>

<style>
  .marquee {
    display: flex;
    position: relative;
    gap: 4rem;
    mask-image: linear-gradient(
      to right,
      transparent,
      white 5%,
      white 95%,
      transparent
    );
    width: 100%;
    overflow: hidden;
    user-select: none;
  }

  @media screen and (max-width: 767px) {
    .marquee {
      gap: 2rem;
    }
  }

  .marquee-content {
    display: flex;
    flex-shrink: 0;
    justify-content: space-around;
    align-items: center;
    gap: 4rem;
    animation: scroll 30s linear infinite;
    min-width: 100%;
  }

  @media screen and (max-width: 767px) {
    .marquee-content {
      gap: 2rem;
    }
  }

  .marquee-item {
    display: flex;
    flex: 0 0 auto;
    justify-content: center;
    align-items: center;
    -webkit-transform: translateZ(0);
    /* Scale to 50% on mobile */
    transform: scale(0.8);
  }

  @media (min-width: 768px) {
    .marquee-item {
      /* Return to original size on desktop */
      transform: scale(1);
    }
  }

  @keyframes scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(calc(-100% - 4rem));
    }
  }

  @media screen and (max-width: 767px) {
    @keyframes scroll {
      from {
        transform: translateX(0);
      }
      to {
        transform: translateX(calc(-100% - 2rem));
      }
    }
  }

  .marquee-container:hover .marquee-content {
    animation-play-state: paused;
  }

  @media (prefers-reduced-motion: reduce) {
    .marquee-content {
      animation-play-state: paused;
    }
  }
</style>
