---
// import HeaderLink from './HeaderLink.astro'
// import { SITE_TITLE } from '../consts'
import ModeToggle from '@/components/ModeToggle.astro'
import { MenuItems, StickyHeader, Astronav } from 'astro-navbar'
import MenuIcon from '@/components/MenuIcon.astro'
import AstroNav from '@/components/AstroNav.astro'
import LinkedIn from '@/components/icons/LinkedIn.astro'
import { getI18N } from '@/i18n'
import LanguageSwitcher from '@/components/LanguageSwitcher.astro'
const { currentLocale } = Astro
const i18n = getI18N({ currentLocale })
---

<StickyHeader
  class='sticky top-0 z-20 mx-0 flex h-auto grid-cols-4 justify-between border-b-primary bg-background shadow-black/10 transition-shadow md:grid md:h-28 md:items-start md:px-12 md:py-4'
  scrollY={50}
  defaultClass='shadow-none'
  activeClass='shadow-3xl'
>
  <AstroNav closeOnClick>
    <div
      class='relative z-20 flex w-full justify-between px-6 py-4 md:px-0 md:py-0'
    >
      <div class=''>
        <span class='mb-2 hidden text-xs md:block'
          >{i18n.HEADER.NAMECARD.LABEL}</span
        >
        <p class='text-xl'>{i18n.HEADER.NAMECARD.NAME}</p>
      </div>
      <div class='flex items-center md:hidden'>
        <MenuIcon class='h-6 w-6' />
      </div>
    </div>
    <MenuItems
      class='fixed z-10 hidden h-dvh w-full bg-background/60 px-6 backdrop-blur-2xl *:inset-0 dark:bg-background/80 md:relative md:contents md:h-auto md:bg-transparent md:backdrop-blur-none'
    >
      <ul
        class='relative mb-12 mt-24 flex h-full w-full flex-col items-center justify-start gap-10 md:mb-auto md:mt-auto md:contents md:flex-row md:gap-5'
      >
        <li class='w-full md:w-auto'>
          <span class='mb-2 block text-sm md:text-xs'
            >{i18n.HEADER.STATUSCARD.LABEL}</span
          >
          <p
            class='max-w-[25ch] text-balance text-xl md:text-base'
            set:html={i18n.HEADER.STATUSCARD.STATUS}
          />
        </li>
        <li class='w-full md:w-auto'>
          <span class='mb-2 block text-sm md:text-xs'
            >{i18n.HEADER.INDEXCARD.LABEL}</span
          >
          <ul
            id='nav-links'
            class='flex flex-col gap-y-1 text-xl md:block md:text-base md:*:inline'
          >
            <li>
              <a
                href='#projects'
                class="nav-link transition-colors hover:text-accent after:hover:text-foreground md:after:content-[',_']"
                >{i18n.HEADER.INDEXCARD.NAV.PROJECTS}</a
              >
            </li>
            <li>
              <a
                href='#about'
                class="nav-link transition-colors hover:text-accent after:hover:text-foreground md:after:content-[',_']"
                >{i18n.HEADER.INDEXCARD.NAV.ABOUT}</a
              >
            </li>
            <li>
              <a
                href='#contact'
                class='nav-link transition-colors hover:text-accent after:hover:text-foreground'
                >{i18n.HEADER.INDEXCARD.NAV.CONTACT}</a
              >
            </li>
          </ul>
        </li>
        <li
          class='w-full self-start justify-self-start md:w-auto md:min-w-20 md:justify-self-end'
        >
          <span class='mb-2 block text-sm md:text-xs'
            >{i18n.HEADER.MISCCARD.LABEL}</span
          >
          <div class='flex flex-row items-center gap-4'>
            <!-- Add LinkedIn link -->
            <a
              href='https://www.linkedin.com/in/diego-de-sousa'
              target='_blank'
              aria-label='LinkedIn de Diego de Sousa'
            >
              <LinkedIn class='h-6 w-6 transition-all hover:scale-125' />
            </a>
            <ModeToggle />
            <LanguageSwitcher />
          </div>
        </li>
      </ul>
    </MenuItems>
  </AstroNav>
</StickyHeader>

<script>
  document.addEventListener('astro:page-load', () => {
    const nav = document.querySelector('.astronav-sticky-header')
    const navLinks = document.querySelectorAll('.nav-link')
    const sections = document.querySelectorAll('section[data-section]')

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const navLink = document.querySelector(
            `a[href="#${entry.target.id}"]`
          )
          if (entry.isIntersecting) {
            navLink?.classList.add('text-accent', 'after:text-foreground')
          } else {
            navLink?.classList.remove('text-accent', 'after:text-foreground')
          }
        })
      },
      {
        threshold: 0.2
      }
    )

    sections.forEach((section) => observer.observe(section))

    // window.addEventListener('scroll', () => {
    //   if (window.scrollY > 50) {
    //     nav?.classList.add('shadow-3xl')
    //   } else {
    //     nav?.classList.remove('shadow-3xl')
    //   }
    // })
  })
</script>

<style>
  .nav-link.active {
    color: var(--accent-color);
  }
</style>

<!-- <style is:global>
  /* Animate menu items when the class "hidden" is removed */
  .astronav-items ul {
    visibility: hidden;
    opacity: 0;
    transition:
      visibility 0s,
      opacity 2s;
  }

  .astronav-items:not(.hidden) ul {
    visibility: visible;

    opacity: 1;
  }
</style> -->
